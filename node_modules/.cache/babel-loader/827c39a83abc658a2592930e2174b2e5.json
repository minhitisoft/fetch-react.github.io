{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/minhceo/Desktop/qiuz-test/src/component/SetTime.js\";\nimport React, { Component } from \"react\";\n\nclass SetTime extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      start: null,\n      end: null,\n      fields: {},\n      errors: {}\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      c;\n\n      if (this.handleValidation()) {\n        this.props.handleTime(this.state);\n      } else {\n        alert(\"Form has errors\");\n      }\n    };\n\n    this.handleChange = (field, e) => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n      let fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({\n        fields\n      });\n    };\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true; //Start\n\n    if (!fields[\"timeStart\"]) {\n      formIsValid = false;\n      errors[\"timeStart\"] = \"Cannot be empty\";\n    } //Start\n\n\n    if (!fields[\"timeEnd\"]) {\n      formIsValid = false;\n      errors[\"timeEnd\"] = \"Cannot be empty\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        id: \"form\",\n        onSubmit: this.handleSubmit.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"start\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"start\",\n            className: \"form-control\",\n            onChange: this.handleChange.bind(this, \"timStart\"),\n            value: this.state.fields[\"timStart\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: this.state.errors[\"timStart\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"end\",\n            children: \"End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"end\",\n            className: \"form-control\",\n            onChange: this.handleChange.bind(this, \"timeEnd\"),\n            value: this.state.fields[\"timeEnd\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: this.state.errors[\"timeEnd\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SetTime;","map":{"version":3,"sources":["/Users/minhceo/Desktop/qiuz-test/src/component/SetTime.js"],"names":["React","Component","SetTime","state","start","end","fields","errors","handleSubmit","e","preventDefault","c","handleValidation","props","handleTime","alert","handleChange","field","setState","target","id","value","formIsValid","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass SetTime extends Component {\n    state = {\n        start: null,\n        end: null,\n        fields: {},\n        errors: {}\n    };\n\n\n    handleValidation() {\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n\n        //Start\n        if (!fields[\"timeStart\"]) {\n            formIsValid = false;\n            errors[\"timeStart\"] = \"Cannot be empty\";\n        }\n        //Start\n        if (!fields[\"timeEnd\"]) {\n            formIsValid = false;\n            errors[\"timeEnd\"] = \"Cannot be empty\";\n        }\n        this.setState({errors: errors});\n        return formIsValid;\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        c\n        if (this.handleValidation()) {\n            this.props.handleTime(this.state);\n        } else {\n            alert(\"Form has errors\");\n        }\n    };\n\n    handleChange = ( field,e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n        let fields = this.state.fields;\n        fields[field] = e.target.value;\n        this.setState({ fields });\n    };\n\n    render() {\n        return (\n            <div>\n                <form action=\"\" id=\"form\" onSubmit={this.handleSubmit.bind(this)}>\n                    <div className=\"form-item mb-3\">\n                        <label htmlFor=\"start\">Start</label>\n                        <input\n                            type=\"date\"\n                            id=\"start\"\n                            className=\"form-control\"\n                            onChange={this.handleChange.bind(this, \"timStart\")}\n                            value={this.state.fields[\"timStart\"]}\n                        />\n                        <span className=\"error\">{this.state.errors[\"timStart\"]}</span>\n                    </div>\n                    <div className=\"form-item mb-3\">\n                        <label htmlFor=\"end\">End</label>\n                        <input\n                            type=\"date\"\n                            id=\"end\"\n                            className=\"form-control\"\n                            onChange={this.handleChange.bind(this, \"timeEnd\")}\n                            value={this.state.fields[\"timeEnd\"]}\n                        />\n                        <span className=\"error\">{this.state.errors[\"timeEnd\"]}</span>\n                    </div>\n                    <div className=\"form-item\">\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SetTime;\n"]},"metadata":{},"sourceType":"module"}