{"ast":null,"code":"'use strict';\n\nvar Entities = require(\"entities\");\n\nvar FS = require('fs');\n\nvar url = require('url');\n\nvar XML2JS = require('xml2js');\n\nvar HTTP = require('http');\n\nvar HTTPS = require('https');\n\nvar Parser = module.exports = {};\nvar FEED_FIELDS = [['author', 'creator'], ['dc:publisher', 'publisher'], ['dc:creator', 'creator'], ['dc:source', 'source'], ['dc:title', 'title'], ['dc:type', 'type'], 'title', 'description', 'author', 'pubDate', 'webMaster', 'managingEditor', 'generator', 'link'];\nvar ITEM_FIELDS = [['author', 'creator'], ['dc:creator', 'creator'], ['dc:date', 'date'], ['dc:language', 'language'], ['dc:rights', 'rights'], ['dc:source', 'source'], ['dc:title', 'title'], 'title', 'link', 'pubDate', 'author', 'content:encoded', 'enclosure', 'dc:creator', 'dc:date'];\n\nvar mapItunesField = function (f) {\n  return ['itunes:' + f, f];\n};\n\nvar PODCAST_FEED_FIELDS = ['author', 'subtitle', 'summary', 'explicit'].map(mapItunesField);\nvar PODCAST_ITEM_FIELDS = ['author', 'subtitle', 'summary', 'explicit', 'duration', 'image', 'episode', 'season'].map(mapItunesField);\n\nvar stripHtml = function (str) {\n  return str.replace(/<(?:.|\\n)*?>/gm, '');\n};\n\nvar getSnippet = function (str) {\n  return Entities.decode(stripHtml(str)).trim();\n};\n\nvar getLink = function (links, rel, fallbackIdx) {\n  if (!links) return;\n\n  for (var i = 0; i < links.length; ++i) {\n    if (links[i].$.rel === rel) return links[i].$.href;\n  }\n\n  if (links[fallbackIdx]) return links[fallbackIdx].$.href;\n};\n\nvar getContent = function (content) {\n  if (typeof content._ === 'string') {\n    return content._;\n  } else if (typeof content === 'object') {\n    var builder = new XML2JS.Builder({\n      headless: true,\n      explicitRoot: true,\n      rootName: 'div',\n      renderOpts: {\n        pretty: false\n      }\n    });\n    return builder.buildObject(content);\n  } else {\n    return content;\n  }\n};\n\nvar parseAtomFeed = function (xmlObj, options, callback) {\n  var feed = xmlObj.feed;\n  var json = {\n    feed: {\n      entries: []\n    }\n  };\n\n  if (options && options.customFields && options.customFields.feed) {\n    copyFromXML(feed, json.feed, options.customFields.feed);\n  }\n\n  if (feed.link) {\n    json.feed.link = getLink(feed.link, 'alternate', 0);\n    json.feed.feedUrl = getLink(feed.link, 'self', 1);\n  }\n\n  if (feed.title) {\n    var title = feed.title[0] || '';\n    if (title._) title = title._;\n    if (title) json.feed.title = title;\n  }\n\n  var entries = feed.entry;\n  (entries || []).forEach(function (entry) {\n    var item = {};\n\n    if (options && options.customFields && options.customFields.item) {\n      copyFromXML(entry, item, options.customFields.item);\n    }\n\n    if (entry.title) {\n      var title = entry.title[0] || '';\n      if (title._) title = title._;\n      if (title) item.title = title;\n    }\n\n    if (entry.link && entry.link.length) {\n      item.link = getLink(entry.link, 'alternate', 0);\n    }\n\n    if (entry.updated && entry.updated.length) item.pubDate = new Date(entry.updated[0]).toISOString();\n    if (entry.author && entry.author.length) item.author = entry.author[0].name[0];\n\n    if (entry.content && entry.content.length) {\n      item.content = getContent(entry.content[0]);\n      item.contentSnippet = getSnippet(item.content);\n    }\n\n    if (entry.id) {\n      item.id = entry.id[0];\n    }\n\n    json.feed.entries.push(item);\n  });\n  callback(null, json);\n};\n\nvar parseRSS_9 = function (xmlObj, options, callback) {\n  var channel = xmlObj.rss.channel[0];\n  var items = channel.item;\n  return parseRSS(channel, items, options, callback);\n};\n\nvar parseRSS1 = function (xmlObj, options, callback) {\n  xmlObj = xmlObj['rdf:RDF'];\n  var channel = xmlObj.channel[0];\n  var items = xmlObj.item;\n  return parseRSS(channel, items, options, callback);\n};\n\nvar parseRSS2 = function (xmlObj, options, callback) {\n  var channel = xmlObj.rss.channel[0];\n  var items = channel.item;\n  return parseRSS(channel, items, options, function (err, data) {\n    if (err) return callback(err);\n\n    if (xmlObj.rss.$['xmlns:itunes']) {\n      decorateItunes(data, channel);\n    }\n\n    callback(null, data);\n  });\n};\n\nvar parseRSS = function (channel, items, options, callback) {\n  items = items || [];\n  options.customFields = options.customFields || {};\n  var itemFields = ITEM_FIELDS.concat(options.customFields.item || []);\n  var feedFields = FEED_FIELDS.concat(options.customFields.feed || []);\n  var json = {\n    feed: {\n      entries: []\n    }\n  };\n  if (channel['atom:link']) json.feed.feedUrl = channel['atom:link'][0].$.href;\n  copyFromXML(channel, json.feed, feedFields);\n  items.forEach(function (item) {\n    var entry = {};\n    copyFromXML(item, entry, itemFields);\n\n    if (item.enclosure) {\n      entry.enclosure = item.enclosure[0].$;\n    }\n\n    if (item.description) {\n      entry.content = getContent(item.description[0]);\n      entry.contentSnippet = getSnippet(entry.content);\n    }\n\n    if (item.guid) {\n      entry.guid = item.guid[0];\n      if (entry.guid._) entry.guid = entry.guid._;\n    }\n\n    if (item.category) entry.categories = item.category;\n    var date = entry.pubDate || entry.date;\n\n    if (date) {\n      try {\n        entry.isoDate = new Date(date.trim()).toISOString();\n      } catch (e) {// Ignore bad date format\n      }\n    }\n\n    json.feed.entries.push(entry);\n  });\n  callback(null, json);\n};\n\nvar copyFromXML = function (xml, dest, fields) {\n  fields.forEach(function (f) {\n    var from = f;\n    var to = f;\n\n    if (Array.isArray(f)) {\n      from = f[0];\n      to = f[1];\n    }\n\n    if (xml[from] !== undefined) dest[to] = xml[from][0];\n  });\n};\n/**\n * Add iTunes specific fields from XML to extracted JSON\n *\n * @access public\n * @param {object} json extracted\n * @param {object} channel parsed XML\n */\n\n\nvar decorateItunes = function decorateItunes(json, channel) {\n  var items = channel.item || [],\n      entry = {};\n  json.feed.itunes = {};\n\n  if (channel['itunes:owner']) {\n    var owner = {},\n        image;\n\n    if (channel['itunes:owner'][0]['itunes:name']) {\n      owner.name = channel['itunes:owner'][0]['itunes:name'][0];\n    }\n\n    if (channel['itunes:owner'][0]['itunes:email']) {\n      owner.email = channel['itunes:owner'][0]['itunes:email'][0];\n    }\n\n    if (channel['itunes:image']) {\n      var hasImageHref = channel['itunes:image'][0] && channel['itunes:image'][0].$ && channel['itunes:image'][0].$.href;\n      image = hasImageHref ? channel['itunes:image'][0].$.href : null;\n    }\n\n    if (image) {\n      json.feed.itunes.image = image;\n    }\n\n    json.feed.itunes.owner = owner;\n  }\n\n  copyFromXML(channel, json.feed.itunes, PODCAST_FEED_FIELDS);\n  items.forEach(function (item, index) {\n    var entry = json.feed.entries[index];\n    entry.itunes = {};\n    copyFromXML(item, entry.itunes, PODCAST_ITEM_FIELDS);\n    var image = item['itunes:image'];\n\n    if (image && image[0] && image[0].$ && image[0].$.href) {\n      entry.itunes.image = image[0].$.href;\n    }\n  });\n};\n\nParser.parseString = function (xml, options, callback) {\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n\n  options.xml2js = options.xml2js || {};\n  var parser = new XML2JS.Parser(options.xml2js);\n  parser.parseString(xml, function (err, result) {\n    if (err) return callback(err);\n\n    if (!result) {\n      return callback(new Error('Unable to parse XML.'));\n    }\n\n    if (result.feed) {\n      return parseAtomFeed(result, options, callback);\n    } else if (result.rss && result.rss.$.version && result.rss.$.version.indexOf('2') === 0) {\n      return parseRSS2(result, options, callback);\n    } else if (result['rdf:RDF']) {\n      return parseRSS1(result, options, callback);\n    } else if (result.rss && result.rss.$.version && result.rss.$.version.match(/0\\.9/)) {\n      return parseRSS_9(result, options, callback);\n    } else {\n      return callback(new Error(\"Feed not recognized as RSS 1 or 2.\"));\n    }\n  });\n};\n\nParser.parseURL = function (feedUrl, options, callback) {\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n\n  options.__redirectCount = options.__redirectCount || 0;\n  if (options.maxRedirects === undefined) options.maxRedirects = 1;\n  var xml = '';\n  var get = feedUrl.indexOf('https') === 0 ? HTTPS.get : HTTP.get;\n  var parsedUrl = url.parse(feedUrl);\n  var req = get({\n    auth: parsedUrl.auth,\n    protocol: parsedUrl.protocol,\n    hostname: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    headers: {\n      'User-Agent': 'rss-parser'\n    }\n  }, function (res) {\n    if (res.statusCode >= 300 && res.statusCode < 400 && res.headers['location']) {\n      if (options.maxRedirects === 0) return callback(new Error(\"Status code \" + res.statusCode));\n      if (options.__redirectCount === options.maxRedirects) return callback(new Error(\"Too many redirects\"));\n      options.__redirectCount++;\n      return Parser.parseURL(res.headers['location'], options, callback);\n    }\n\n    res.setEncoding('utf8');\n    res.on('data', function (chunk) {\n      xml += chunk;\n    });\n    res.on('end', function () {\n      return Parser.parseString(xml, options, callback);\n    });\n  });\n  req.on('error', callback);\n};\n\nParser.parseFile = function (file, options, callback) {\n  FS.readFile(file, 'utf8', function (err, contents) {\n    return Parser.parseString(contents, options, callback);\n  });\n};","map":{"version":3,"sources":["/Users/minhceo/Desktop/qiuz-test/node_modules/rss-parser/index.js"],"names":["Entities","require","FS","url","XML2JS","HTTP","HTTPS","Parser","module","exports","FEED_FIELDS","ITEM_FIELDS","mapItunesField","f","PODCAST_FEED_FIELDS","map","PODCAST_ITEM_FIELDS","stripHtml","str","replace","getSnippet","decode","trim","getLink","links","rel","fallbackIdx","i","length","$","href","getContent","content","_","builder","Builder","headless","explicitRoot","rootName","renderOpts","pretty","buildObject","parseAtomFeed","xmlObj","options","callback","feed","json","entries","customFields","copyFromXML","link","feedUrl","title","entry","forEach","item","updated","pubDate","Date","toISOString","author","name","contentSnippet","id","push","parseRSS_9","channel","rss","items","parseRSS","parseRSS1","parseRSS2","err","data","decorateItunes","itemFields","concat","feedFields","enclosure","description","guid","category","categories","date","isoDate","e","xml","dest","fields","from","to","Array","isArray","undefined","itunes","owner","image","email","hasImageHref","index","parseString","xml2js","parser","result","Error","version","indexOf","match","parseURL","__redirectCount","maxRedirects","get","parsedUrl","parse","req","auth","protocol","hostname","port","path","headers","res","statusCode","setEncoding","on","chunk","parseFile","file","readFile","contents"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Entities = require(\"entities\");\nvar FS = require('fs');\nvar url = require('url');\nvar XML2JS = require('xml2js');\n\nvar HTTP = require('http');\nvar HTTPS = require('https');\n\nvar Parser = module.exports = {};\n\nvar FEED_FIELDS = [\n  ['author', 'creator'],\n  ['dc:publisher', 'publisher'],\n  ['dc:creator', 'creator'],\n  ['dc:source', 'source'],\n  ['dc:title', 'title'],\n  ['dc:type', 'type'],\n  'title',\n  'description',\n  'author',\n  'pubDate',\n  'webMaster',\n  'managingEditor',\n  'generator',\n  'link',\n];\n\nvar ITEM_FIELDS = [\n  ['author', 'creator'],\n  ['dc:creator', 'creator'],\n  ['dc:date', 'date'],\n  ['dc:language', 'language'],\n  ['dc:rights', 'rights'],\n  ['dc:source', 'source'],\n  ['dc:title', 'title'],\n  'title',\n  'link',\n  'pubDate',\n  'author',\n  'content:encoded',\n  'enclosure',\n  'dc:creator',\n  'dc:date',\n];\n\nvar mapItunesField = function(f) {\n  return ['itunes:' + f, f];\n}\n\nvar PODCAST_FEED_FIELDS = ([\n  'author',\n  'subtitle',\n  'summary',\n  'explicit'\n]).map(mapItunesField);\n\nvar PODCAST_ITEM_FIELDS = ([\n  'author',\n  'subtitle',\n  'summary',\n  'explicit',\n  'duration',\n  'image',\n  'episode',\n  'season'\n]).map(mapItunesField);\n\n\nvar stripHtml = function(str) {\n  return str.replace(/<(?:.|\\n)*?>/gm, '');\n}\n\nvar getSnippet = function(str) {\n  return Entities.decode(stripHtml(str)).trim();\n}\n\nvar getLink = function(links, rel, fallbackIdx) {\n  if (!links) return;\n  for (var i = 0; i < links.length; ++i) {\n    if (links[i].$.rel === rel) return links[i].$.href;\n  }\n  if (links[fallbackIdx]) return links[fallbackIdx].$.href;\n}\n\nvar getContent = function(content) {\n  if (typeof content._ === 'string') {\n    return content._;\n  } else if (typeof content === 'object') {\n    var builder = new XML2JS.Builder({headless: true, explicitRoot: true, rootName: 'div', renderOpts: {pretty: false}});\n    return builder.buildObject(content);\n  } else {\n    return content;\n  }\n}\n\nvar parseAtomFeed = function(xmlObj, options, callback) {\n  var feed = xmlObj.feed;\n  var json = {feed: {entries: []}};\n  if(options && options.customFields && options.customFields.feed){\n    copyFromXML(feed, json.feed, options.customFields.feed);\n  }\n  if (feed.link) {\n    json.feed.link = getLink(feed.link, 'alternate', 0);\n    json.feed.feedUrl = getLink(feed.link, 'self', 1);\n  }\n  if (feed.title) {\n    var title = feed.title[0] || '';\n    if (title._) title = title._\n    if (title) json.feed.title = title;\n  }\n  var entries = feed.entry;\n  (entries || []).forEach(function (entry) {\n    var item = {};\n    if(options && options.customFields && options.customFields.item){\n      copyFromXML(entry, item, options.customFields.item);\n    }\n    if (entry.title) {\n      var title = entry.title[0] || '';\n      if (title._) title = title._;\n      if (title) item.title = title;\n    }\n    if (entry.link && entry.link.length) {\n      item.link = getLink(entry.link, 'alternate', 0);\n    }\n    if (entry.updated && entry.updated.length) item.pubDate = new Date(entry.updated[0]).toISOString();\n    if (entry.author && entry.author.length) item.author = entry.author[0].name[0];\n    if (entry.content && entry.content.length) {\n      item.content = getContent(entry.content[0]);\n      item.contentSnippet = getSnippet(item.content)\n    }\n    if (entry.id) {\n      item.id = entry.id[0];\n    }\n    json.feed.entries.push(item);\n  });\n  callback(null, json);\n}\n\nvar parseRSS_9 = function(xmlObj, options, callback) {\n  var channel = xmlObj.rss.channel[0];\n  var items = channel.item;\n  return parseRSS(channel, items, options, callback);\n}\n\nvar parseRSS1 = function(xmlObj, options, callback) {\n  xmlObj = xmlObj['rdf:RDF'];\n  var channel = xmlObj.channel[0];\n  var items = xmlObj.item;\n  return parseRSS(channel, items, options, callback);\n}\n\nvar parseRSS2 = function(xmlObj, options, callback) {\n  var channel = xmlObj.rss.channel[0];\n  var items = channel.item;\n  return parseRSS(channel, items, options, function(err, data) {\n    if (err) return callback(err);\n    if (xmlObj.rss.$['xmlns:itunes']) {\n      decorateItunes(data, channel);\n    }\n    callback(null, data);\n  });\n}\n\nvar parseRSS = function(channel, items, options, callback) {\n  items = items || [];\n  options.customFields = options.customFields || {};\n  var itemFields = ITEM_FIELDS.concat(options.customFields.item || []);\n  var feedFields = FEED_FIELDS.concat(options.customFields.feed || []);\n\n  var json = {feed: {entries: []}};\n\n  if (channel['atom:link']) json.feed.feedUrl = channel['atom:link'][0].$.href;\n  copyFromXML(channel, json.feed, feedFields);\n  items.forEach(function(item) {\n    var entry = {};\n    copyFromXML(item, entry, itemFields);\n    if (item.enclosure) {\n        entry.enclosure = item.enclosure[0].$;\n    }\n    if (item.description) {\n      entry.content = getContent(item.description[0]);\n      entry.contentSnippet = getSnippet(entry.content);\n    }\n    if (item.guid) {\n      entry.guid = item.guid[0];\n      if (entry.guid._) entry.guid = entry.guid._;\n    }\n    if (item.category) entry.categories = item.category;\n    var date = entry.pubDate || entry.date;\n    if (date) {\n      try {\n        entry.isoDate = new Date(date.trim()).toISOString();\n      } catch (e) {\n        // Ignore bad date format\n      }\n    }\n    json.feed.entries.push(entry);\n  })\n  callback(null, json);\n}\n\nvar copyFromXML = function(xml, dest, fields) {\n  fields.forEach(function(f) {\n    var from = f;\n    var to = f;\n    if (Array.isArray(f)) {\n      from = f[0];\n      to = f[1];\n    }\n    if (xml[from] !== undefined) dest[to] = xml[from][0];\n  })\n}\n\n/**\n * Add iTunes specific fields from XML to extracted JSON\n *\n * @access public\n * @param {object} json extracted\n * @param {object} channel parsed XML\n */\nvar decorateItunes = function decorateItunes(json, channel) {\n  var items = channel.item || [],\n      entry = {};\n  json.feed.itunes = {}\n\n  if (channel['itunes:owner']) {\n    var owner = {},\n        image;\n\n    if(channel['itunes:owner'][0]['itunes:name']) {\n      owner.name = channel['itunes:owner'][0]['itunes:name'][0];\n    }\n    if(channel['itunes:owner'][0]['itunes:email']) {\n      owner.email = channel['itunes:owner'][0]['itunes:email'][0];\n    }\n    if(channel['itunes:image']) {\n      var hasImageHref = (channel['itunes:image'][0] &&\n                            channel['itunes:image'][0].$ &&\n                            channel['itunes:image'][0].$.href);\n      image = hasImageHref ? channel['itunes:image'][0].$.href : null;\n    }\n\n    if(image) {\n      json.feed.itunes.image = image;\n    }\n    json.feed.itunes.owner = owner;\n  }\n\n  copyFromXML(channel, json.feed.itunes, PODCAST_FEED_FIELDS);\n  items.forEach(function(item, index) {\n    var entry = json.feed.entries[index];\n    entry.itunes = {};\n    copyFromXML(item, entry.itunes, PODCAST_ITEM_FIELDS);\n    var image = item['itunes:image'];\n    if (image && image[0] && image[0].$ && image[0].$.href) {\n      entry.itunes.image = image[0].$.href;\n    }\n  });\n}\n\nParser.parseString = function(xml, options, callback) {\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n  options.xml2js = options.xml2js || {};\n  var parser = new XML2JS.Parser(options.xml2js);\n  parser.parseString(xml, function(err, result) {\n    if (err) return callback(err);\n    if (!result) {\n      return callback(new Error('Unable to parse XML.'));\n    }\n    if (result.feed) {\n      return parseAtomFeed(result, options, callback)\n    } else if (result.rss && result.rss.$.version && result.rss.$.version.indexOf('2') === 0) {\n      return parseRSS2(result, options, callback);\n    } else if (result['rdf:RDF']) {\n      return parseRSS1(result, options, callback);\n    } else if (result.rss && result.rss.$.version && result.rss.$.version.match(/0\\.9/)) {\n      return parseRSS_9(result, options, callback);\n    } else {\n      return callback(new Error(\"Feed not recognized as RSS 1 or 2.\"))\n    }\n  });\n}\n\nParser.parseURL = function(feedUrl, options, callback) {\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n  options.__redirectCount = options.__redirectCount || 0;\n  if (options.maxRedirects === undefined) options.maxRedirects = 1;\n\n  var xml = '';\n  var get = feedUrl.indexOf('https') === 0 ? HTTPS.get : HTTP.get;\n  var parsedUrl = url.parse(feedUrl);\n  var req = get({\n    auth: parsedUrl.auth,\n    protocol: parsedUrl.protocol,\n    hostname: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    headers: {'User-Agent': 'rss-parser'}\n  }, function(res) {\n    if (res.statusCode >= 300 && res.statusCode < 400 && res.headers['location']) {\n      if (options.maxRedirects === 0) return callback(new Error(\"Status code \" + res.statusCode));\n      if (options.__redirectCount === options.maxRedirects) return callback(new Error(\"Too many redirects\"));\n      options.__redirectCount++;\n      return Parser.parseURL(res.headers['location'], options, callback);\n    }\n    res.setEncoding('utf8');\n    res.on('data', function(chunk) {\n      xml += chunk;\n    });\n    res.on('end', function() {\n      return Parser.parseString(xml, options, callback);\n    })\n  })\n  req.on('error', callback);\n}\n\nParser.parseFile = function(file, options, callback) {\n  FS.readFile(file, 'utf8', function(err, contents) {\n    return Parser.parseString(contents, options, callback);\n  })\n}\n"]},"metadata":{},"sourceType":"script"}